(()=>{"use strict";var e=document.querySelector(".profile__button_type_edit"),t=document.querySelector(".profile__button_type_add"),n=(document.querySelector(".cards__button_type_del"),document.querySelector(".profile__avatar")),r=document.querySelector(".popup_theme_profile"),o=document.querySelector(".popup_theme_place"),i=document.querySelector(".popup_theme_image"),a=document.querySelector(".popup_theme_avatar"),u=document.querySelector(".popup_theme_delete"),c=document.querySelector(".popup__button-close_theme_profile"),s=document.querySelector(".popup__button-close_theme_place"),l=document.querySelector(".popup__button-close_theme_image"),f=document.querySelector(".popup__button-close_theme_avatar"),p=document.querySelector(".popup__button-close_theme_delete"),_=i.querySelector(".popup__photo"),h=i.querySelector(".popup__photo-title"),d=document.querySelector(".profile__name"),y=document.querySelector(".profile__text"),v=document.querySelector(".profile__image"),m=document.querySelector(".popup__item_type_name"),b=document.querySelector(".popup__item_type_info"),k=document.querySelector(".popup__container"),g=(document.querySelector(".popup__form"),k.querySelector("form[name=record]")),w=a.querySelector("form[name=photo]"),S=(document.querySelector(".popup__form_theme_place"),o.querySelector("form[name=cards]")),E=(document.querySelector(".popup__item_type_newname"),document.querySelector(".popup__item_type_link"),document.querySelector(".cards")),O=document.querySelector(".popup__button-save_yes");function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var C=function(){function e(t,n,r){var o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._data=t,this._selectorTemplate=n,this._onImageClick=r.imageClick,this._onRemove=r.remove,this._onLike=r.like,this._removeLike=r.removeLike,this._element=this._getTemplate(),this._image=this._element.querySelector(".cards__image"),this._title=this._element.querySelector(".cards__title"),this._likeButton=this._element.querySelector(".cards__button_type_like"),this._removeButton=this._element.querySelector(".cards__button_type_del"),this._likeCount=this._element.querySelector(".cards__like-number"),this._isLiked=this._data.likes.find((function(e){return e._id===o._data.currentUserId})),this._image.src=this._data.link,this._image.alt=this._data.name,this._title.textContent=this._data.name,this._likeCount.textContent=this._data.likes.length,this._setEventListeners()}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._selectorTemplate).content.querySelector(".cards__item").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element}},{key:"_setEventListeners",value:function(){var e=this;this._likeButton.addEventListener("click",(function(){e._handlerLike()})),this._data.owner._id===this._data.currentUserId?this._removeButton.addEventListener("click",(function(){e._onRemove(e._data,(function(){return e._handlerRemove()}))})):this._removeButton.remove(),this._image.addEventListener("click",(function(){e._onImageClick(e._data)})),this._isLiked&&this._likeButton.classList.add("cards__button_type_like-active")}},{key:"_handlerLike",value:function(){var e=this;this._isLiked=this._data.likes.find((function(t){return t._id===e._data.currentUserId})),this._isLiked?(this._likeButton.classList.remove("cards__button_type_like-active"),this._removeLike(this._data,(function(t){console.log("Работаю removeLike",{newLikes:t}),e._data.likes=t,e._likeCount.textContent=e._data.likes.length}))):(this._likeButton.classList.add("cards__button_type_like-active"),this._onLike(this._data,(function(t){console.log("Работаю onLike",{newLikes:t}),e._data.likes=t,e._likeCount.textContent=e._data.likes.length})))}},{key:"_handlerRemove",value:function(){this._element.remove(),this._element=null}}])&&L(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var P=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=n}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.append(e)}},{key:"addNewItem",value:function(e){this._container.prepend(e)}},{key:"deleteItem",value:function(e){e.remove()}},{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}}])&&j(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var R=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=t,this._formElement=n}var t,n;return t=e,(n=[{key:"enableValidation",value:function(){this._setEventListeners()}},{key:"_setEventListeners",value:function(){var e=this;this._inputList=Array.from(this._formElement.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._formElement.querySelector(this._config.submitButtonSelector),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"deleteMistakes",value:function(){var e=this;this._inputList.forEach((function(t){e._hideInputError(t)})),this._toggleButtonState()}},{key:"disableButton",value:function(){this._buttonElement.setAttribute("disabled",!0),this._buttonElement.classList.add(this._config.inactiveButtonClass)}},{key:"enableButton",value:function(){this._buttonElement.removeAttribute("disabled",!1),this._buttonElement.classList.remove(this._config.inactiveButtonClass)}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this.disableButton():this.enableButton()}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._config.inputErrorClass),n.textContent=t,n.classList.add(this._config.errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));t.textContent="",e.classList.remove(this._config.inputErrorClass),t.classList.remove(this._config.errorClass)}}])&&q(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();const I={formSelector:".popup__form",inputSelector:".popup__item",submitButtonSelector:".popup__button-save",inactiveButtonClass:"popup__button_inactive",inputErrorClass:"popup__item_type_error",errorClass:"popup__item-error_active"};function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var B=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=t,this._closeButton=n,this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_handleOverlayClose",value:function(e){e.target===e.currentTarget&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._closeButton.addEventListener("click",(function(){e.close()})),this._popup.addEventListener("click",(function(t){e._handleOverlayClose(t)}))}},{key:"open",value:function(){document.addEventListener("keydown",this._handleEscClose),this._popup.classList.add("popup_opened")}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}}])&&T(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function U(e){return U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},U(e)}function x(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function A(){return A="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=V(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},A.apply(this,arguments)}function V(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=M(e)););return e}function D(e,t){return D=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},D(e,t)}function N(e,t){if(t&&("object"===U(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function M(e){return M=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},M(e)}var J=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&D(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=M(r);if(o){var n=M(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return N(this,e)});function a(e,t,n,r){var o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(o=i.call(this,e,t))._image=n,o._title=r,o}return t=a,(n=[{key:"open",value:function(e){var t=e.data;this._image.src=t.link,this._image.alt=t.name,this._title.textContent=t.name,A(M(a.prototype),"open",this).call(this)}}])&&x(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(B);function G(e){return G="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},G(e)}function H(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function z(){return z="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=F(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},z.apply(this,arguments)}function F(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=W(e)););return e}function K(e,t){return K=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},K(e,t)}function Q(e,t){if(t&&("object"===G(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function W(e){return W=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},W(e)}var X=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&K(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=W(r);if(o){var n=W(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Q(this,e)});function a(e,t,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,e,n))._handleSubmit=t,r._form=r._popup.querySelector(".popup__form"),r._inputList=r._form.querySelectorAll(".popup__item"),r._setEventListeners=r.setEventListeners(),r}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmit(e._getInputValues()),e.close()})),z(W(a.prototype),"setEventListeners",this).call(this)}},{key:"addSaving",value:function(){this._form.querySelector(".popup__button-save").textContent="Сохранение..."}},{key:"deleteSaving",value:function(){this._form.querySelector(".popup__button-save").textContent="Сохранить"}},{key:"close",value:function(){this._form.reset(),z(W(a.prototype),"close",this).call(this)}}])&&H(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(B);function Y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var Z=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t,this._info=n,this._avatar=r}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,job:this._info.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about,r=e._id;this._name.textContent=t,this._info.textContent=n,this._id=r}},{key:"setUserAvatar",value:function(e){var t=e.avatar;this._avatar.src=t}}])&&Y(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function $(e){return $="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},$(e)}function ee(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function te(){return te="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=ne(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},te.apply(this,arguments)}function ne(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=ie(e)););return e}function re(e,t){return re=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},re(e,t)}function oe(e,t){if(t&&("object"===$(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function ie(e){return ie=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},ie(e)}var ae=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&re(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=ie(r);if(o){var n=ie(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return oe(this,e)});function a(e,t,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,e,n))._handleSubmit=t,r._form=r._popup.querySelector(".popup__form"),r}return t=a,(n=[{key:"setEventListeners",value:function(){this._form.addEventListener("submit",(function(e){e.preventDefault()})),te(ie(a.prototype),"setEventListeners",this).call(this)}}])&&ee(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(B);function ue(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var ce=new(function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var t,n;return t=e,(n=[{key:"_handleResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getUserInfo",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/users/me"),{method:"GET",headers:this._headers}).then((function(t){return e._handleResponse(t)}))}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/cards"),{method:"GET",headers:this._headers}).then((function(t){return e._handleResponse(t)}))}},{key:"setUserInfo",value:function(e){var t=this,n=e.name,r=e.about;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:n,about:r})}).then((function(e){return t._handleResponse(e)}))}},{key:"setNewCard",value:function(e){var t=this,n=e.name,r=e.link;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:n,link:r})}).then((function(e){return t._handleResponse(e)}))}},{key:"setProfileAvatar",value:function(e){var t=this,n=e.avatar;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:n})}).then((function(e){return t._handleResponse(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return t._handleResponse(e)}))}},{key:"likeCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then((function(e){return t._handleResponse(e)}))}},{key:"likeRemove",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then((function(e){return t._handleResponse(e)}))}}])&&ue(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}())({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-48",headers:{authorization:"84303af8-04c1-448c-9d37-1e7857c2af9d","Content-Type":"application/json"}}),se=new R(I,g);se.enableValidation();var le=new R(I,S);le.enableValidation();var fe=new R(I,w);fe.enableValidation();var pe=new Z(d,y,v),_e=new ae(u,(function(e,t){ce.deleteCard(e).then((function(){E.deleteItem(t),_e.close()}))}),p),he=new J(i,l,_,h);he.setEventListeners(),_e.setEventListeners();var de=new X(r,(function(e){var t=e.name,n=e.job;de.addSaving(),ce.setUserInfo({name:t,about:n}).then((function(e){pe.setUserInfo({name:e.name,about:e.about}),de.close()})).catch((function(e){console.log(e)})).finally((function(){return de.deleteSaving()}))}),c),ye=new X(o,(function(e){console.log(e),ce.setNewCard({name:e.newname,link:e.link}).then((function(e){ke.addNewItem(be(e))})).catch((function(e){console.log(e)}))}),s),ve=new X(a,(function(e){var t=e.avatar;ve.addSaving(),ce.setProfileAvatar({avatar:t}).then((function(e){pe.setUserAvatar({avatar:e.avatar}),ve.close()})).catch((function(e){console.log(e)})).finally((function(){return ve.deleteSaving()}))}),f),me=null;ce.getUserInfo().then((function(e){me=e._id,pe.setUserInfo(e),pe.setUserAvatar(e),ce.getInitialCards()})).catch((function(e){console.log(e)}));var be=function(e){return e.currentUserId=me,new C(e,"#card-template",{imageClick:Ee,remove:Se,like:ge,removeLike:we}).generateCard()},ke=new P({renderer:function(e){ke.addItem(be(e))}},E);function ge(e,t){ce.likeCard(e._id).then((function(e){t(e.likes)}))}function we(e,t){ce.likeRemove(e._id).then((function(e){t(e.likes)}))}function Se(e,t){O.addEventListener("click",(function(){!function(e,t){ce.deleteCard(e._id).then((function(e){t(e.likes),_e.close()}))}(e,t)})),_e.open()}function Ee(e){var t=e.name,n=e.link;he.open({data:{name:t,link:n}})}ce.getInitialCards().then((function(e){ke.renderItems(e)})).catch((function(e){console.log(e)})),e.addEventListener("click",(function(){var e=pe.getUserInfo();m.value=e.name,b.value=e.job,de.open(),se.deleteMistakes()})),t.addEventListener("click",(function(){S.reset(),le.deleteMistakes(),ye.open()})),n.addEventListener("click",(function(){fe.deleteMistakes(),ve.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,